apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJuZXh1cy1jaS5wbGF5cGl0LmJ5OjY1NjYiOnsidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoiYWRtaW4xMjMiLCJlbWFpbCI6ImFAYS5ieSIsImF1dGgiOiJZV1J0YVc0NllXUnRhVzR4TWpNPSJ9fX0=
kind: Secret
metadata:
  creationTimestamp: null
  name: my-secret
  namespace: _studentName_
type: kubernetes.io/dockerconfigjson
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tomcat-dep
  namespace: _studentName_
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 1
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      imagePullSecrets:
      - name: my-secret
      containers:
      - name: tomcat
        image: registry-ci.playpit.by/helloworld-_studentName_:_buildNumber_
        imagePullPolicy: Always

        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 2

        ports:
        - name: tom-port
          containerPort: 8080
---

apiVersion: v1
kind: Service
metadata:
  name: tomcat-svc
  namespace: _studentName_
spec:
  selector:
    app: tomcat
  ports:
  - name: tom-svc-port
    port: 8080
    targetPort: tom-port
---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: my-ingress
  namespace: _studentName_
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: _studentName_-app.k8s.playpit.by
    http:
      paths:
      - path: /
        backend:
          serviceName: tomcat-svc
          servicePort: tom-svc-port
